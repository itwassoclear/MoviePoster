{"version":3,"sources":["API/config.js","API/REST.js","components/Kinoafisha/index.js","helpers/styles.js","index.js"],"names":["config","BASE_URI","getMovies","a","filter","fetch","response","json","result","Kinoafisha","useState","selectedFilter","setSelectedFilter","movies","setMovies","_updateMoviesByFilter","event","nextFilter","currentTarget","dataset","name","_getMoviesByFilter","api","newMovies","useEffect","state","styles","latestFilter","cx","upcomingFilter","popularFilter","sortButton","desc","sortCriteria","moviesJSX","map","movie","index","className","key","genre","alt","title","src","poster","raiting","data-name","data-lang","onClick","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAS,IAJtB,sCACIC,SAAW,qCCCA,4CACXC,UADW,sBACC,4CAAAC,EAAA,6DAAOC,EAAP,+BAAgB,WAAhB,SACeC,MAAM,GAAD,OAAIL,EAAOC,SAAX,0BAAqCG,IADzD,cACFE,EADE,gBAEaA,EAASC,OAFtB,cAEFC,EAFE,yBAIDA,GAJC,4CCEHC,EAAa,WAAO,IAAD,EACcC,mBAAS,YADvB,mBACvBC,EADuB,KACPC,EADO,OAEFF,mBAAS,IAFP,mBAEvBG,EAFuB,KAEfC,EAFe,KAIxBC,EAAwB,SAACC,GAC7B,IAAMC,EAAaD,EAAME,cAAcC,QAAQC,KAE/CR,EAAkBK,IAEdI,EAAkB,uCAAG,WAAOJ,GAAP,eAAAd,EAAA,sEACDmB,EAAIpB,UAAUe,GADb,OACnBM,EADmB,OAEzBT,EAAUS,GAFe,2CAAH,sDAKxBC,qBAAU,WACRH,EAAmBV,KAClB,CAACA,IAEJ,ICpBwBc,EDoBlBC,GCpBkBD,EDoBC,CACvBd,kBCpBO,CACHgB,aAAcC,IAAG,SAAU,CACvBjB,eAAyC,WAAzBc,EAAMd,iBAE1BkB,eAAgBD,IAAG,SAAU,CACzBjB,eAAyC,aAAzBc,EAAMd,iBAE1BmB,cAAeF,IAAG,SAAU,CACxBjB,eAAyC,YAAzBc,EAAMd,iBAE1BoB,WAAYH,IAAG,CACXI,KAA6B,SAAvBP,EAAMQ,iBDchBC,EAAYrB,EAAOsB,KAAI,SAACC,EAAOC,GACnC,OACE,yBAAKC,UAAU,QAAQC,IAAKF,GAC1B,yBAAKC,UAAU,UACb,0BAAMA,UAAU,SAASF,EAAMI,OAC/B,yBAAKC,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,SAClC,0BAAMN,UAAU,WAAWF,EAAMS,UAEnC,0BAAMP,UAAU,SAASF,EAAMM,WAKrC,OACE,oCACE,yBAAKJ,UAAU,UACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,WACb,yBACEA,UAAWZ,EAAOC,aAClBmB,YAAU,SACVC,YAAU,MACVC,QAASjC,GAET,6EAAe,IAAIkC,MAAOC,gBAE5B,yBACEZ,UAAWZ,EAAOG,eAClBiB,YAAU,WACVC,YAAU,MACVC,QAASjC,GAET,2IAEF,yBACEuB,UAAWZ,EAAOI,cAClBgB,YAAU,UACVC,YAAU,MACVC,QAASjC,GAET,mGAIN,yBAAKuB,UAAU,WAAWJ,KElEhCiB,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,U","file":"static/js/main.d504c338.chunk.js","sourcesContent":["export class Config {\n    BASE_URI = 'https://lab.lectrum.io/afisha/api';\n}\n\nexport const config = new Config();\n","import { config } from './config';\n\nexport default new class Api {\n    getMovies = async (filter = 'upcoming') => {\n        const response = await fetch(`${config.BASE_URI}/movies?filter=${filter}`);\n        const result = await response.json();\n\n        return result;\n    };\n}();\n","import React, { useState, useEffect } from \"react\";\nimport \"../../theme/init.css\";\nimport { getStyles } from \"../../helpers\";\nimport { api } from \"../../API\";\n\nexport const Kinoafisha = () => {\n  const [selectedFilter, setSelectedFilter] = useState(\"upcoming\");\n  const [movies, setMovies] = useState([]);\n\n  const _updateMoviesByFilter = (event) => {\n    const nextFilter = event.currentTarget.dataset.name;\n    // const nextFilter = event.currentTarget.dataset.eng;\n    setSelectedFilter(nextFilter);\n  };\n  const _getMoviesByFilter = async (nextFilter) => {\n    const newMovies = await api.getMovies(nextFilter);\n    setMovies(newMovies);\n  };\n\n  useEffect(() => {\n    _getMoviesByFilter(selectedFilter);\n  }, [selectedFilter]);\n\n  const styles = getStyles({\n    selectedFilter,\n  });\n\n  //   console.log(movies);\n\n  const moviesJSX = movies.map((movie, index) => {\n    return (\n      <div className=\"movie\" key={index}>\n        <div className=\"poster\">\n          <span className=\"genre\">{movie.genre}</span>\n          <img alt={movie.title} src={movie.poster} />\n          <span className=\"raiting\">{movie.raiting}</span>\n        </div>\n        <span className=\"title\">{movie.title}</span>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"logo\"></div>\n        <div className=\"filters\">\n          <div\n            className={styles.latestFilter}\n            data-name=\"latest\"\n            data-lang=\"eng\"\n            onClick={_updateMoviesByFilter}\n          >\n            <span>Новинки {new Date().getFullYear()}</span>\n          </div>\n          <div\n            className={styles.upcomingFilter}\n            data-name=\"upcoming\"\n            data-lang=\"eng\"\n            onClick={_updateMoviesByFilter}\n          >\n            <span>Скоро в кинотеатрах</span>\n          </div>\n          <div\n            className={styles.popularFilter}\n            data-name=\"popular\"\n            data-lang=\"eng\"\n            onClick={_updateMoviesByFilter}\n          >\n            <span>В топ-чартах</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"content\">{moviesJSX}</div>\n    </>\n  );\n};\n","// Core\nimport cx from 'classnames';\n\nexport const getStyles = (state) => {\n    return {\n        latestFilter: cx('filter', {\n            selectedFilter: state.selectedFilter === 'latest',\n        }),\n        upcomingFilter: cx('filter', {\n            selectedFilter: state.selectedFilter === 'upcoming',\n        }),\n        popularFilter: cx('filter', {\n            selectedFilter: state.selectedFilter === 'popular',\n        }),\n        sortButton: cx({\n            desc: state.sortCriteria === 'desc',\n        }),\n    };\n};\n","// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App\nimport { Kinoafisha } from './components/Kinoafisha';\n\nReactDOM.render(<Kinoafisha />, document.getElementById('root'));\n"],"sourceRoot":""}